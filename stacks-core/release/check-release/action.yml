## Composite action to check if the branch is a release tag or not
name: Check Release

inputs:
  tag:
    description: "The branch name against which the step runs"
    required: true

outputs:
  node_tag:
    description: "The node release tag, if there is one (empty otherwise)."
    value: ${{ steps.check_release.outputs.node_tag }}
  node_docker_tag:
    description: "The node release tag for docker, if there is one (empty otherwise)."
    value: ${{ steps.check_release.outputs.node_docker_tag }}
  signer_tag:
    description: "The signer release tag, if there is one (empty otherwise)."
    value: ${{ steps.check_release.outputs.signer_tag }}
  signer_docker_tag:
    description: "The signer release tag for docker, if there is one (empty otherwise)."
    value: ${{ steps.check_release.outputs.signer_docker_tag }}
  is_node_release:
    description: "True if the branch is a release one, false otherwise."
    value: ${{ steps.check_release.outputs.is_node_release }}
  is_signer_release:
    description: "True if the branch is a release one, false otherwise."
    value: ${{ steps.check_release.outputs.is_signer_release }}

runs:
  using: "composite"
  steps:
    - name: Set Release Outputs
      id: check_release
      shell: bash
      run: |
        branch_name=${{ inputs.tag }}

        stacks_core_version_regex="([0-9]+\.){4}[0-9]+(-rc[0-9]+)?"  # matches x.x.x.x.x || x.x.x.x.x-rcx
        signer_version_regex="([0-9]+\.){5}[0-9]+(-rc[0-9]+)?"   # matches x.x.x.x.x.x || x.x.x.x.x.x-rcx

        stacks_core_regex_base="release/"
        signer_regex_base="release/signer-"

        stacks_core_regex="${stacks_core_regex_base}${stacks_core_version_regex}"
        signer_regex="${signer_regex_base}${signer_version_regex}"

        node_tag=""
        node_docker_tag=""
        signer_tag=""
        signer_docker_tag=""
        is_node_release=false
        is_signer_release=false

        if [[ "$branch_name" =~ ^${signer_regex}$ ]]; then
          signer_tag=$(echo "$branch_name" | sed "s|^${stacks_core_regex_base}||g")
          signer_docker_tag=$(echo "$branch_name" | sed "s|^${signer_regex_base}||g")
          is_signer_release=true
        elif [[ "$branch_name" =~ ^${stacks_core_regex}$ ]]; then
          node_tag=$(echo "$branch_name" | sed "s|^${stacks_core_regex_base}||g")
          node_docker_tag=${node_tag}
          signer_tag="signer-$(echo ${node_tag} | sed 's/\(-[^-]*\)*$/.0\1/')"
          signer_docker_tag=$(echo ${node_tag} | sed 's/\(-[^-]*\)*$/.0\1/')
          is_node_release=true
          is_signer_release=true
        else
          exit 1
        fi

        echo "node_tag=$node_tag" >> "$GITHUB_OUTPUT"
        echo "node_docker_tag=$node_docker_tag" >> "$GITHUB_OUTPUT"
        echo "signer_tag=$signer_tag" >> "$GITHUB_OUTPUT"
        echo "signer_docker_tag=$signer_docker_tag" >> "$GITHUB_OUTPUT"
        echo "is_node_release=$is_node_release" >> "$GITHUB_OUTPUT"
        echo "is_signer_release=$is_signer_release" >> "$GITHUB_OUTPUT"

        exit 0
