## Github workflow to create multiarch binaries from source
name: Create Binaries
description: "Create Binary Archives"
branding:
  icon: "archive"
  color: "gray-dark"

inputs:
  arch:
    description: "Architecture to build binary"
    required: true
  cpu:
    description: "CPU to build binary"
    required: true
  signer_docker_tag:
    description: "Signer Docker Release Tag"
    required: true
  node_tag:
    description: "The artifact pattern of the node cache"
    required: true

runs:
  using: "composite"
  steps:
    ## Set env vars based on the type of arch build
    - name: Set local env vars
      id: set_env
      shell: bash
      run: |
        case ${{ inputs.cpu }} in
          x86-64)
            ## default x64 builds to use v3 variant.
            ARCHIVE_NAME="x64"
            ;;
          x86-64-v2)
            ## intel nehalem (2008) and newer
            ARCHIVE_NAME="x64-v2"
            ;;
          x86-64-v3)
            ## intel haswell (2013) and newer
            ARCHIVE_NAME="x64-v3"
            ;;
          x86-64-v4)
            ## intel skylake (2017) and newer
            ARCHIVE_NAME="x64-v4"
            ;;
          *)
            ARCHIVE_NAME="${{ inputs.cpu }}"
            ;;
        esac
        echo "ZIPFILE=${{ inputs.arch }}-${ARCHIVE_NAME}" >> "$GITHUB_ENV"
        echo "CACHE_NAME=${{ inputs.node_tag }}-binary-build-${{ inputs.arch }}-${ARCHIVE_NAME}" >> "$GITHUB_ENV"

    ## Downloads the artifacts built in `create-source-binary.yml`
    - name: Download Artifacts
      id: download_artifacts
      uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
      with:
        pattern: ${{ env.CACHE_NAME }}
        path: release
        merge-multiple: true

    ## Remove everything but the signer from the archive
    - name: Remove binaries
      id: remove_binaries
      shell: bash
      run: |
        echo "Extract to temp dir /tmp/binaries"
        unzip ./release/${{ env.ZIPFILE }}.zip -d /tmp/binaries
        if [ -f "./release/${{ env.ZIPFILE }}.zip" ]; then
          echo "Deleting archive before recreating it"
          rm -f "./release/${{ env.ZIPFILE }}.zip"
        fi
        echo "Recreate binary archive with only stacks-signer and provenance.json"
        zip --junk-paths ./release/${{ env.ZIPFILE }}.zip /tmp/binaries/stacks-signer* /tmp/binaries/provenance.json

    ## Upload the binary artifact to the github action (used in `github-release.yml` to create a release)
    - name: Upload artifact
      id: upload_artifact
      uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4.6.0
      with:
        name: ${{ inputs.signer_docker_tag }}-binary-build-${{ env.ZIPFILE }}
        path: ./release/${{ env.ZIPFILE }}.zip
